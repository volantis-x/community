{"version":3,"sources":["volantis-sw.js"],"names":["ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","_typeof","Symbol","toPrimitive","call","TypeError","String","Number","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iterator","constructor","prototype","_toArray","_arrayWithHoles","_nonIterableRest","a","toString","slice","name","from","test","n","_regenerator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","p","y","G","v","d","bind","l","done","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","this","setPrototypeOf","__proto__","displayName","w","m","_invoke","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","_next","_throw","prefix","cacheSuffixVersion","CACHE_NAME","PreCachlist","NPMMirror","NPMPackage","NPMPackageVersion","debug","handleFetch","_ref","_callee","event","url","_context","request","NetworkOnly","CacheFirst","CacheAlways","_x","cdn","gh","jsdelivr","fastly","gcore","testingcf","test1","combine","npm","unpkg","eleme","cdnjs","baomitu","bootcdn","bytedance","sustech","cdn_match_list","type","key","_console","console","color","black","red","green","yellow","blue","magenta","cyan","white","add","fi","_ref3","undefined","first","other","concat","createlog","util","fun","log","_len","args","_key2","creategroup","groupCollapsed","_len2","_key3","colorUtils","bold","str","colorHash","wait","error","warn","ready","info","createChalk","_len3","_key5","strArr","firstToUpperCase","createChalkBg","_len4","_key6","createChalkGroup","_len5","_key7","chalk","group","end","groupEnd","bg","toLowerCase","replace","L","toUpperCase","self","logger","generate_uuid","Math","random","db","read","config","reject","caches","open","cache","match","Request","encodeURIComponent","res","text","write","put","Response","compareVersion","b","v1","split","v2","len","max","num1","parseInt","num2","mirrors","getLocalVersion","_ref4","_callee2","_t","_context2","mirror_time","setNewestVersion","_ref5","_callee4","_context4","fetch","FetchEngine","json","_ref6","_callee3","_t2","_t3","_t4","_context3","version","_x2","stack","setInterval","_callee5","_context5","setTimeout","_callee6","_context6","installFunction","_ref9","_callee8","_context8","_ref0","_callee7","index","_context7","response","_x3","addEventListener","_ref1","_callee9","_context9","skipWaiting","waitUntil","_x4","_ref10","_callee0","_t6","_context0","all","map","includes","clients","claim","_x5","_ref11","_callee1","_context1","respondWith","_x6","_ref12","_callee10","_context10","URL","pathname","_x7","_ref13","_callee11","_context11","resp","CacheRuntime","_x8","_ref14","_callee12","_context12","_x9","matchCache","_ref15","_callee13","_context13","_x0","_x1","_CacheRuntime","_callee16","_context16","matchCDN","method","protocol","clone","_ref16","_callee14","req","nav","_ref17","saveData","effectiveType","urls","urlObj","pathType","pathTestRes","_key8","_i","_cdn_match_list","item","_type","_key9","_url","ext","contentType","_context14","navigator","connection","mozConnection","webkitConnection","RegExp","location","origin","fullPath","exec","pop","getContentType","arrayBuffer","buffer","headers","_x10","endsWith","list","indexOf","progress","_x11","_progress","_callee17","_t7","_t8","_t9","_context17","status","createPromiseAny","any","promises","errs","AggregateError","err","fetchAny","reqs","controller","AbortController","signal","abort","fetchParallel","abortEvent","Event","eventTarget","EventTarget","_ref18","_callee15","tagged","_context15","dispatchEvent","_x12"],"mappings":"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","file":"../volantis-sw.js","sourcesContent":["// 全站打包上传 npm，sw 并发请求 cdn\nconst prefix = 'volantis-community';\nconst cacheSuffixVersion = '00000018-::cacheSuffixVersion::';\nconst CACHE_NAME = prefix + '-v' + cacheSuffixVersion;\nconst PreCachlist = [\n  \"/css/style.css\",\n  \"/js/app.js\",\n  \"/js/search/hexo.js\",\n];\nlet NPMMirror = true;\nconst NPMPackage = \"@mhg/volantis-community\";\nlet NPMPackageVersion = \"1.0.1674055760561\";\nlet debug = true;\n// location.hostname == 'localhost' && (debug = true) && (NPMMirror = false);\nconst handleFetch = async (event) => {\n  const url = event.request.url;\n  if (/nocache/.test(url)) {\n    return NetworkOnly(event)\n  } else if (/@latest/.test(url)) {\n    return CacheFirst(event)\n  } else if (/cdnjs\\.cloudflare\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/music\\.126\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/qqmusic\\.qq\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/jsdelivr\\.net/.test(url)) {\n    return CacheAlways(event)\n  } else if (/npm\\.elemecdn\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/unpkg\\.com/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(?:png|jpg|jpeg|svg|gif|webp|ico|eot|ttf|woff|woff2|mp3)$/.test(url)) {\n    return CacheAlways(event)\n  } else if (/.*\\.(css|js)$/.test(url)) {\n    return CacheAlways(event)\n  } else {\n    return CacheFirst(event)\n  }\n}\nconst cdn = {\n  gh: {\n    jsdelivr: 'https://cdn.jsdelivr.net/gh',\n    fastly: 'https://fastly.jsdelivr.net/gh',\n    gcore: 'https://gcore.jsdelivr.net/gh',\n    testingcf: 'https://testingcf.jsdelivr.net/gh',\n    test1: 'https://test1.jsdelivr.net/gh',\n  },\n  combine: {\n    jsdelivr: 'https://cdn.jsdelivr.net/combine',\n    fastly: 'https://fastly.jsdelivr.net/combine',\n    gcore: 'https://gcore.jsdelivr.net/combine',\n    testingcf: 'https://testingcf.jsdelivr.net/combine',\n    test1: 'https://test1.jsdelivr.net/combine',\n  },\n  npm: {\n    jsdelivr: 'https://cdn.jsdelivr.net/npm',\n    fastly: 'https://fastly.jsdelivr.net/npm',\n    gcore: 'https://gcore.jsdelivr.net/npm',\n    testingcf: 'https://testingcf.jsdelivr.net/npm',\n    test1: 'https://test1.jsdelivr.net/npm',\n    unpkg: 'https://unpkg.com',\n    eleme: 'https://npm.elemecdn.com',\n  },\n  cdnjs: {\n    cdnjs: 'https://cdnjs.cloudflare.com/ajax/libs',\n    baomitu: 'https://lib.baomitu.com',\n    bootcdn: 'https://cdn.bootcdn.net/ajax/libs',\n    bytedance: 'https://lf6-cdn-tos.bytecdntp.com/cdn/expire-1-M',\n    sustech: 'https://mirrors.sustech.edu.cn/cdnjs/ajax/libs',\n  }\n}\nconst cdn_match_list = []\nfor (const type in cdn) {\n  for (const key in cdn[type]) {\n    cdn_match_list.push({ type: type, key: cdn[type][key] })\n  }\n}\nconst _console = console;\nconst color = {\n  black: '#000000',\n  red: '#FF0000',\n  green: '#008000',\n  yellow: '#FFFF00',\n  blue: '#0000FF',\n  magenta: '#FF00FF',\n  cyan: '#00FFFF',\n  white: '#FFFFFF',\n};\nconst add = (...arr) => {\n  let fi = [\n    []\n  ];\n  for (let key = 0; key < arr.length; key++) {\n    const [first, ...other] = arr[key];\n    fi[0] += first;\n    fi = fi.concat(other);\n  }\n  return fi;\n};\nconst createlog = (util) => (...args) => {\n  // const fun = _console[util] ? _console[util] : _console.log;\n  const fun = util == \"error\" ? _console[util] : _console.log;\n  fun.apply(void 0, args);\n};\nconst creategroup = (util) => (...args) => {\n  const fun = _console.groupCollapsed;\n  fun.apply(void 0, args);\n};\nconst colorUtils = {\n  bold: (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return `${str};font-weight: bold;`;\n    }\n    for (let key = 1; key < str.length; key++) {\n      str[key] += `;font-weight: bold;`;\n    }\n    return str;\n  }\n};\nconst colorHash = {\n  log: 'black',\n  wait: 'cyan',\n  error: 'red',\n  warn: 'yellow',\n  ready: 'green',\n  info: 'blue',\n  event: 'magenta',\n};\nconst createChalk = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkBg = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  createlog(name)(...add(colorUtils.bold(colorUtils[`bg${firstToUpperCase(colorHash[name])}`](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst createChalkGroup = (name) => (...str) => {\n  if (typeof str[0] === 'object') {\n    creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), ...str));\n    return;\n  }\n  let strArr = str;\n  if (typeof str === 'string' || typeof str === 'number') {\n    strArr = colorUtils[colorHash[name]](str);\n  }\n  creategroup(name)(...add(colorUtils.bold(colorUtils[colorHash[name]](`[${firstToUpperCase(name)}] `)), strArr));\n};\nconst chalk = {\n  group: {\n    end: _console.groupEnd\n  },\n  bg: {}\n};\nObject.keys(colorHash).forEach(key => {\n  chalk[key] = createChalk(key);\n  chalk.group[key] = createChalkGroup(key);\n  chalk.bg[key] = createChalkBg(key);\n});\nconst firstToUpperCase = (str) => str.toLowerCase().replace(/( |^)[a-z]/g, (L) => L.toUpperCase());\nObject.keys(color).forEach(key => {\n  colorUtils[key] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `color:${color[key]}`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;color:${color[key]}`;\n    }\n    return str;\n  };\n  colorUtils[`bg${firstToUpperCase(key)}`] = (str) => {\n    if (typeof str === 'string' || typeof str === 'number') {\n      return [`%c${str}`, `padding: 2px 4px; border-radius: 3px; color: ${key === 'white' ? '#000' : '#fff'}; font-weight: bold; background:${color[key]};`];\n    }\n    for (let i = 1; i < str.length; i++) {\n      str[i] += `;padding: 2px 4px; border-radius: 3px; font-weight: bold; background:${color[key]};`;\n    }\n    return str;\n  };\n});\nself.logger = {\n  add,\n  ...chalk,\n  ...colorUtils,\n};\n\nif (!debug) {\n  logger = {\n    log: () => { },\n    wait: () => { },\n    error: () => { },\n    warn: () => { },\n    ready: () => { },\n    info: () => { },\n    event: () => { },\n    group: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n      end: () => { },\n    },\n    bg: {\n      log: () => { },\n      wait: () => { },\n      error: () => { },\n      warn: () => { },\n      ready: () => { },\n      info: () => { },\n      event: () => { },\n    }\n  };\n  console.log = () => { };\n}\n\nconst generate_uuid = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\nself.db = {\n  read: (key, config) => {\n    if (!config) { config = { type: \"text\" } }\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(cache => {\n        cache.match(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`)).then(function (res) {\n          if (!res) resolve(null)\n          res.text().then(text => resolve(text))\n        }).catch(() => {\n          resolve(null)\n        })\n      })\n    })\n  },\n  write: (key, value) => {\n    return new Promise((resolve, reject) => {\n      caches.open(CACHE_NAME).then(function (cache) {\n        cache.put(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`), new Response(value));\n        resolve()\n      }).catch(() => {\n        reject()\n      })\n    })\n  }\n}\nconst compareVersion = (a, b) => {\n  let v1 = a.split('.');\n  let v2 = b.split('.');\n  const len = Math.max(v1.length, v2.length);\n  while (v1.length < len) {\n    v1.push('0');\n  }\n  while (v2.length < len) {\n    v2.push('0');\n  }\n  for (let i = 0; i < len; i++) {\n    const num1 = parseInt(v1[i]);\n    const num2 = parseInt(v2[i]);\n    if (num1 > num2) {\n      return a;\n    } else if (num1 < num2) {\n      return b;\n    }\n  }\n  return a;\n}\n\nconst mirrors = [\n  `https://registry.npmjs.org/${NPMPackage}/latest`,\n  `https://registry.npmmirror.com/${NPMPackage}/latest`,\n  `https://mirrors.cloud.tencent.com/npm/${NPMPackage}/latest`\n]\nconst getLocalVersion = async () => {\n  NPMPackageVersion = await db.read('blog_version') || NPMPackageVersion\n  logger.bg.info(`Local Version: ${NPMPackage}@${NPMPackageVersion}`)\n}\nlet mirror_time = 0;\nconst setNewestVersion = async () => {\n  if (!NPMMirror) {\n    return\n  }\n  let f = null;\n  if (!(mirror_time % (mirrors.length + 1))) {\n    f = FetchEngine(mirrors);\n  } else {\n    f = fetch(mirrors[(mirror_time % (mirrors.length + 1)) - 1]);\n  }\n  mirror_time++;\n  return f\n    .then(res => res.json())\n    .then(async res => {\n      if (!res.version) throw ('No Version Found!')\n      NPMPackageVersion = compareVersion(res.version, await db.read('blog_version') || NPMPackageVersion)\n      logger.bg.ready(`${NPMPackage}@${NPMPackageVersion}`)\n      await db.write('blog_version', NPMPackageVersion)\n    })\n    .catch(error => {\n      logger.error('[Set Newest Version] ' + (error.stack || error))\n    })\n}\nsetInterval(async () => {\n  await setNewestVersion()\n}, 60 * 1000);\nsetTimeout(async () => {\n  await setNewestVersion()\n}, 5000)\nconst installFunction = async () => {\n  await getLocalVersion();\n  return caches.open(CACHE_NAME + \"-precache\")\n    .then(async function (cache) {\n      if (!await db.read('uuid')) {\n        await db.write('uuid', generate_uuid())\n      }\n      if (PreCachlist.length) {\n        logger.group.event(`Precaching ${PreCachlist.length} files.`);\n        let index = 0;\n        PreCachlist.forEach(function (url) {\n          cache.match(new Request(url)).then(function (response) {\n            if (response) {\n              logger.ready(`Precaching ${url}`);\n            } else {\n              logger.wait(`Precaching ${url}`);\n              cache.add(new Request(url));\n            }\n            index++;\n            if (index === PreCachlist.length) {\n              logger.ready(`Precached ${PreCachlist.length} files.`);\n              logger.group.end();\n            }\n          })\n        })\n      }\n    }).catch((error) => {\n      logger.error('[install] ' + (error.stack || error));\n    })\n}\nself.addEventListener('install', async function (event) {\n  logger.bg.event(\"service worker install event listening\");\n  try {\n    self.skipWaiting();\n    event.waitUntil(installFunction());\n    logger.bg.ready('service worker install sucess!');\n  } catch (error) {\n    logger.error('[install] ' + (error.stack || error));\n  }\n});\nself.addEventListener('activate', async event => {\n  logger.bg.event(\"service worker activate event listening\");\n  try {\n    event.waitUntil(\n      caches.keys().then((keys) => {\n        return Promise.all(keys.map((key) => {\n          if (!key.includes(cacheSuffixVersion)) {\n            caches.delete(key);\n            logger.bg.ready('Deleted Outdated Cache: ' + key);\n          }\n        }));\n      }).catch((error) => {\n        logger.error('[activate] ' + (error.stack || error));\n      })\n    );\n    await self.clients.claim()\n    logger.bg.ready('service worker activate sucess!');\n  } catch (error) {\n    logger.error('[activate] ' + (error.stack || error));\n  }\n})\nself.addEventListener('fetch', async event => {\n  event.respondWith(\n    handleFetch(event).catch((error) => {\n      logger.error('[fetch] ' + event.request.url + '\\n[error] ' + (error.stack || error));\n    })\n  )\n});\n\n\nconst NetworkOnly = async (event) => {\n  logger.group.info('NetworkOnly: ' + new URL(event.request.url).pathname);\n  logger.wait('service worker fetch: ' + event.request.url)\n  logger.group.end();\n  return fetch(event.request)\n}\nconst CacheFirst = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheFirst: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      event.waitUntil(CacheRuntime(event.request))\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nconst CacheAlways = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('CacheAlways: ' + new URL(event.request.url).pathname);\n    logger.wait('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\n\nconst matchCache = async (event) => {\n  return caches.match(event.request).then(function (resp) {\n    logger.group.info('service worker fetch: ' + event.request.url)\n    if (resp) {\n      logger.group.ready(`Cache Hit`);\n      console.log(resp)\n      logger.group.end();\n      logger.group.end();\n      return resp;\n    } else {\n      logger.warn(`Cache Miss`);\n      logger.group.end();\n      return CacheRuntime(event.request)\n    }\n  })\n}\nasync function CacheRuntime(request) {\n  const url = new URL(request.url);\n  let response = await matchCDN(request);\n  if (!response) {\n    response = await fetch(request).catch(() => null)\n  }\n  logger.group.event(`Cache Runtime ${url.pathname}`);\n  logger.wait(`Caching url: ${request.url}`);\n  console.log(response);\n\n  if (request.method === \"GET\" && (url.protocol == \"https:\")) {\n    const cache = await caches.open(CACHE_NAME + \"-runtime\");\n    cache.put(request, response.clone()).catch(error => {\n      logger.error('[Cache Runtime] ' + (error.stack || error));\n      if (error.name === 'QuotaExceededError') {\n        caches.delete(CACHE_NAME + \"-runtime\");\n        logger.ready(\"deleted cache\")\n      }\n    })\n    logger.ready(`Cached url: ${request.url}`);\n  } else {\n    logger.warn(`Not Cached url: ${request.url}`);\n  }\n  logger.group.end();\n  return response;\n}\n\nconst matchCDN = async (req) => {\n  const nav = navigator\n  const { saveData, effectiveType } = nav.connection || nav.mozConnection || nav.webkitConnection || {}\n  if (saveData || /2g/.test(effectiveType)) {\n    logger.warn(\"Slow Network: Transparent Proxy\");\n    return fetch(req);\n  }\n  const urls = []\n  let urlObj = new URL(req.url)\n  let pathType = urlObj.pathname.split('/')[1]\n  let pathTestRes = \"\";\n\n  if (NPMMirror && new RegExp(location.origin).test(req.url)) {\n    logger.group.ready(`Match NPM Mirror: ` + req.url);\n    for (const key in cdn.npm) {\n      let url = cdn.npm[key] + \"/\" + NPMPackage + \"@\" + NPMPackageVersion + req.url.replace(location.origin, '')\n      url = fullPath(fullPath(url))\n      console.log(url);\n      urls.push(url)\n    }\n    logger.group.end()\n  }\n  if (!urls.length) {\n    for (const item of cdn_match_list) {\n      if (new RegExp(item.key).test(req.url)) {\n        pathType = item.type\n        pathTestRes = new RegExp(item.key).exec(req.url)[0]\n        break;\n      }\n    }\n    for (const type in cdn) {\n      if (type === pathType) {\n        logger.group.ready(`Match CDN ${pathType}: ` + req.url);\n        for (const key in cdn[type]) {\n          const url = cdn[type][key] + req.url.replace(pathTestRes, '')\n          console.log(url);\n          urls.push(url)\n        }\n        logger.group.end()\n      }\n    }\n  }\n\n  let res;\n  if (urls.length)\n    res = FetchEngine(urls)\n  else\n    res = fetch(req)\n  if (res && NPMMirror && new RegExp(location.origin).test(req.url)) {\n    const ext = fullPath(fullPath(req.url)).split('.').pop()\n    const contentType = getContentType(ext)\n    res = res\n      .then(res => res.arrayBuffer())\n      .then(buffer => new Response(buffer, {\n        headers: {\n          \"Content-Type\": contentType\n        }\n      }))\n      .catch(() => null)\n  }\n  return res\n}\n\nconst fullPath = (url) => {\n  url = url.split('?')[0].split('#')[0]\n  if (url.endsWith('/')) {\n    url += 'index.html'\n  } else {\n    const list = url.split('/')\n    const last = list[list.length - 1]\n    if (last.indexOf('.') === -1) {\n      url += '.html'\n    }\n  }\n  return url\n}\nasync function progress(res) {\n  return new Response(await res.arrayBuffer(), {\n    status: res.status,\n    headers: res.headers\n  })\n}\n\nfunction createPromiseAny() {\n  Promise.any = function (promises) {\n    return new Promise((resolve, reject) => {\n      promises = Array.isArray(promises) ? promises : []\n      let len = promises.length\n      let errs = []\n      if (len === 0) return reject(new AggregateError('All promises were rejected'))\n      promises.forEach((p) => {\n        if (p instanceof Promise) {\n          p.then(\n            (res) => resolve(res),\n            (err) => {\n              len--\n              errs.push(err)\n              if (len === 0) reject(new AggregateError(errs))\n            }\n          )\n        } else {\n          reject(p)\n        }\n      })\n    })\n  }\n}\n\nfunction fetchAny(reqs) {\n  const controller = new AbortController()\n\n  return reqs.map(req => {\n    return new Promise((resolve, reject) => {\n      fetch(req, {\n        signal: controller.signal\n      })\n        .then(progress)\n        .then(res => {\n          controller.abort()\n          if (res.status !== 200)\n            reject(null)\n          else\n            resolve(res)\n        })\n        .catch(() => reject(null))\n    })\n  })\n}\n\nfunction fetchParallel(reqs) {\n  const abortEvent = new Event(\"abortOtherInstance\")\n  const eventTarget = new EventTarget();\n\n  return reqs.map(async req => {\n    const controller = new AbortController();\n    let tagged = false;\n    eventTarget.addEventListener(abortEvent.type, () => {\n      if (!tagged) controller.abort();\n    })\n    return new Promise((resolve, reject) => {\n      fetch(req, {\n        signal: controller.signal,\n      }).then(res => {\n        tagged = true;\n        eventTarget.dispatchEvent(abortEvent)\n        if (res.status !== 200)\n          reject(null)\n        else\n          resolve(res)\n      }).catch(() => reject(null))\n    })\n  });\n}\n\nconst FetchEngine = (reqs) => {\n  if (!Promise.any) createPromiseAny();\n  return Promise.any(fetchParallel(reqs)).then(res => res)\n    .catch((e) => {\n      if (e == \"AggregateError: All promises were rejected\") {\n        return Promise.any(fetchAny(reqs))\n          .then((res) => res)\n          .catch(() => null);\n      }\n      return null;\n    });\n};\n\nconst getContentType = (ext) => {\n  switch (ext) {\n    case 'js':\n      return 'text/javascript'\n    case 'html':\n      return 'text/html'\n    case 'css':\n      return 'text/css'\n    case 'json':\n      return 'application/json'\n    case 'webp':\n      return 'image/webp'\n    case 'jpg':\n      return 'image/jpg'\n    case 'jpeg':\n      return 'image/jpeg'\n    case 'png':\n      return 'image/png'\n    case 'gif':\n      return 'image/gif'\n    case 'xml':\n      return 'text/xml'\n    case 'xsl':\n      return 'text/xml'\n    case 'webmanifest':\n      return 'text/webmanifest'\n    case 'map':\n      return 'application/json'\n    case 'bcmap':\n      return 'image/vnd.wap.wbmp'\n    case 'wbmp':\n      return 'image/vnd.wap.wbmp'\n    case 'bmp':\n      return 'image/bmp'\n    case 'ico':\n      return 'image/vnd.microsoft.icon'\n    case 'tiff':\n      return 'image/tiff'\n    case 'tif':\n      return 'image/tiff'\n    case 'svg':\n      return 'image/svg+xml'\n    case 'svgz':\n      return 'image/svg+xml'\n    case 'woff':\n      return 'application/font-woff'\n    case 'woff2':\n      return 'application/font-woff2'\n    case 'ttf':\n      return 'application/font-ttf'\n    case 'otf':\n      return 'application/font-otf'\n    case 'eot':\n      return 'application/vnd.ms-fontobject'\n    case 'zip':\n      return 'application/zip'\n    case 'tar':\n      return 'application/x-tar'\n    case 'gz':\n      return 'application/gzip'\n    case 'bz2':\n      return 'application/x-bzip2'\n    case 'rar':\n      return 'application/x-rar-compressed'\n    case '7z':\n      return 'application/x-7z-compressed'\n    case 'doc':\n      return 'application/msword'\n    case 'docx':\n      return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\n    case 'xls':\n      return 'application/vnd.ms-excel'\n    case 'xlsx':\n      return 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n    case 'ppt':\n      return 'application/vnd.ms-powerpoint'\n    case 'pptx':\n      return 'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n    case 'pdf':\n      return 'application/pdf'\n    case 'txt':\n      return 'text/plain'\n    case 'rtf':\n      return 'application/rtf'\n    case 'mp3':\n      return 'audio/mpeg'\n    case 'wav':\n      return 'audio/x-wav'\n    case 'ogg':\n      return 'audio/ogg'\n    case 'mp4':\n      return 'video/mp4'\n    case 'm4v':\n      return 'video/x-m4v'\n    case 'mov':\n      return 'video/quicktime'\n    case 'avi':\n      return 'video/x-msvideo'\n    case 'wmv':\n      return 'video/x-ms-wmv'\n    case 'flv':\n      return 'video/x-flv'\n    case 'swf':\n      return 'application/x-shockwave-flash'\n    case 'mpg':\n      return 'video/mpeg'\n    case 'mpeg':\n      return 'video/mpeg'\n    case 'mpe':\n      return 'video/mpeg'\n    case 'mpv':\n      return 'video/mpeg'\n    case 'm2v':\n      return 'video/mpeg'\n    case 'm4a':\n      return 'audio/mp4'\n    case 'aac':\n      return 'audio/aac'\n    case 'm3u':\n      return 'audio/x-mpegurl'\n    case 'm3u8':\n      return 'application/vnd.apple.mpegurl'\n    case 'pls':\n      return 'audio/x-scpls'\n    case 'cue':\n      return 'application/x-cue'\n    case 'wma':\n      return 'audio/x-ms-wma'\n    case 'flac':\n      return 'audio/flac'\n    case 'aif':\n      return 'audio/x-aiff'\n    case 'aiff':\n      return 'audio/x-aiff'\n    case 'aifc':\n      return 'audio/x-aiff'\n    case 'au':\n      return 'audio/basic'\n    case 'snd':\n      return 'audio/basic'\n    case 'mid':\n      return 'audio/midi'\n    case 'midi':\n      return 'audio/midi'\n    case 'kar':\n      return 'audio/midi'\n    default:\n      return 'text/plain'\n  }\n}\n"]}